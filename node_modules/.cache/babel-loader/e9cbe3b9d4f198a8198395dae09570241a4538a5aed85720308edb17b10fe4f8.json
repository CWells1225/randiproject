{"ast":null,"code":"var _jsxFileName = \"/Users/eberechiochuba/Desktop/files/ProjectsSolo/RandiProject/menu-app/src/product.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getCollectionAPI } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Product() {\n  _s();\n  const [product, setProduct] = useState(null);\n  const [pro, setPro] = useState(null);\n  useEffect(() => {\n    const getList = async () => {\n      try {\n        const data = await HandleFetch();\n        setProduct(data); // Assuming the API returns the products you want to display\n        setPro(data); // Set this based on your needs, or remove if unnecessary\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu-item\",\n    children: product && product.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      // Add a unique key for each item\n      style: {\n        backgroundImage: `url(${item.image})`\n      },\n      className: \"menu-item-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add to basket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(Product, \"oVIV4UfymRIeBw4v9kHwE4Rk614=\");\n_c = Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useState","useEffect","getCollectionAPI","jsxDEV","_jsxDEV","Product","_s","product","setProduct","pro","setPro","getList","data","HandleFetch","err","console","log","className","children","map","item","style","backgroundImage","image","name","fileName","_jsxFileName","lineNumber","columnNumber","description","amount","id","_c","$RefreshReg$"],"sources":["/Users/eberechiochuba/Desktop/files/ProjectsSolo/RandiProject/menu-app/src/product.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getCollectionAPI } from './Api';\n\nexport default function Product() {\n    const [product, setProduct] = useState(null);\n    const [pro, setPro] = useState(null);\n\n    useEffect(() => {\n        const getList = async () => {\n            try {\n                const data = await HandleFetch();\n                setProduct(data); // Assuming the API returns the products you want to display\n                setPro(data); // Set this based on your needs, or remove if unnecessary\n            } catch (err) {\n                console.log(err);\n            }\n        };\n        getList();\n    }, []);\n\n    return (\n        <div className='menu-item'>\n            {product && product.map((item) => (\n                <div\n                    key={item.id} // Add a unique key for each item\n                    style={{ backgroundImage: `url(${item.image})` }}\n                    className='menu-item-image'\n                >\n                    <h3>{item.name}</h3>\n                    <p>{item.description}</p>\n                    <p>{item.amount}</p>\n                    <button className='btn'>Add to basket</button>\n                </div>\n            ))}\n        </div>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZ,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMC,WAAW,CAAC,CAAC;QAChCL,UAAU,CAACI,IAAI,CAAC,CAAC,CAAC;QAClBF,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACJ,CAAC;IACDH,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBX,OAAO,IAAIA,OAAO,CAACY,GAAG,CAAEC,IAAI,iBACzBhB,OAAA;MACkB;MACdiB,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAOF,IAAI,CAACG,KAAK;MAAI,CAAE;MACjDN,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAE3Bd,OAAA;QAAAc,QAAA,EAAKE,IAAI,CAACI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBxB,OAAA;QAAAc,QAAA,EAAIE,IAAI,CAACS;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBxB,OAAA;QAAAc,QAAA,EAAIE,IAAI,CAACU;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBxB,OAAA;QAAQa,SAAS,EAAC,KAAK;QAAAC,QAAA,EAAC;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAPzCR,IAAI,CAACW,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQX,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtB,EAAA,CAjCuBD,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}